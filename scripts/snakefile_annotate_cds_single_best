species = ['vicia']

chunk = [str(x).zfill(2) for x in range(1,21)]

rule all:
	input:
		cds='assemblies/vicia/vicia.final.raw.transdecoder.cds',
		gff='assemblies/vicia/vicia.final.raw.transdecoder.gff3',
		pep='assemblies/vicia/vicia.final.raw.transdecoder.pep'
	shell:  'rm -f -r pipeliner* snakejob* *longest_isoform*'

rule transdecoder_longorfs:
	input:
		'assemblies/vicia/vicia.Trinity.fasta'
	output:
		'assemblies/vicia/longest_orfs.pep'
	params:
		 basename='assemblies/vicia/'
	conda:   '../env/transdecoder.yaml'
	shell:   'TransDecoder.LongOrfs -t {input} --output_dir {params.basename}'

rule split_fasta:
	input:
		 rules.transdecoder_longorfs.output
	output:
		 expand('assemblies/vicia/longest_orfs.part-{chunk}.pep', chunk = chunk)
	conda:   '../env/pyfasta.yaml'
	shell:   'fasta-splitter -n-parts 20 --out-dir assemblies/vicia/ {input}'

rule hmmscan:
	input:
		 'assemblies/vicia/longest_orfs.part-{chunk}.pep'
	output:
		 'assemblies/vicia/longest_orfs.pep.part-{chunk}.fasta.pfam.domtblout'
	threads: 4
	conda:   '../env/hmmscan.yaml'
	shell:   'hmmscan --cpu {threads} --domtblout {output} dbs/pfam/Pfam-A.hmm {input}'

rule blastp:
	input:
		 'assemblies/vicia/longest_orfs.part-{chunk}.pep'
	output:
	 	 'assemblies/vicia/longest_orfs.pep.part-{chunk}.fasta.blastp.outfmt6'
	threads: 4
	conda:   '../env/blast.yaml'
	shell:   'blastp -query {input} -db dbs/swissprot/uniprot_sprot.fasta -max_target_seqs 1 -outfmt 6 -evalue 1e-5 -num_threads {threads} > {output}'

rule merge_blast:
	input: 
		  expand('assemblies/vicia/longest_orfs.pep.part-{chunk}.fasta.blastp.outfmt6', chunk = chunk)
	output:
		  'assemblies/vicia/vicia.outfmt6'
	shell:    'cat {input} >> {output}'

rule merge_hmmer:
        input:                                                                            
              	  expand('assemblies/vicia/longest_orfs.pep.part-{chunk}.fasta.pfam.domtblout', chunk = chunk)
        output:
                  'assemblies/vicia/vicia.domtblout'
        shell:	  'cat {input} >> {output}'

rule transdecoder_predict:
	input:
		 assembly = 'assemblies/vicia/vicia.Trinity.fasta',
		 blast    = 'assemblies/vicia/vicia.outfmt6',
		 hmmscan  = 'assemblies/vicia/vicia.domtblout'
	output:
		 cds='assemblies/vicia/vicia.final.raw.transdecoder.cds',
                 gff='assemblies/vicia/vicia.final.raw.transdecoder.gff3',
                 pep='assemblies/vicia/vicia.final.raw.transdecoder.pep'
	params:
		 basename='assemblies/vicia'
	conda:   '../env/transdecoder.yaml'
	shell:   'TransDecoder.Predict -t {input.assembly} --retain_pfam_hits {input.hmmscan} --retain_blastp_hits {input.blast} --single_best_only --output_dir {params.basename}'

